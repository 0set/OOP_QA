void autorecover2(int x,int y)
{
  int posx1=0,posy1=0;
  int posx2=0,posy2=0;
  bool bprime1=false;
  bool bprime2=false;
  for(int i=M-2;i<M;i++)
     {
     	for(int j=0;j<N;j++)
     	   {
     	   	if(now[i][j]==begin[y+1][x])
     	   	  {
     	   	  	posy2=i;
     	   	  	posx2=j;
     	   	  	break;
     	   	  }
     	   }
     }	
  for(int i=M-2;i<M;i++)
	   {
	   	for(int j=0;j<N;j++)
	   	   {
	   	   	if(now[i][j]==begin[y][x])
	   	   	  {
	   	   	  	posy1=i;
	   	   	  	posx1=j;
	   	   	  	break;
	   	   	  }
	   	   }
	   }
  if(posx1==x && posy1==y && posx2==x && posy2==y+1)
    {
    	return;
    }
  if(posy2==M-2)
    {
      if(posx2!=x)
    	{
    		if(ly==posy2)//ly==posy2==M-1
    	      {
			    if(lx<posx2)
				  {
				  	for(int i=lx;i<posx2;i++)
				  	   {
				  	   	D();
				  	   }
				  	posx2--;
				  	while(posx2>x)
				  	     {
				  	     	S();
				  	     	A();
				  	     	A();
				  	     	W();
				  	     	D();
				  	     	posx2--;
				  	     }
				  }
				else//lx>posx2
				  {
				  	S();
				  	for(int i=lx;i>posx2-1;i--)
				  	   {
				  	   	A();
				  	   }
				  	W();
				  	D();
				  	posx2--;
				  	while(posx2>x)
				  	     {
				  	     	S();
				  	     	A();
				  	     	A();
				  	     	W();
				  	     	D();
				  	     	posx2--;
				  	     }
				  }    	  	
    	      }
    	    else//ly==M-1
    	      {
    	      	if(ly==M-1)
    	      	  {
    	      	  	if(lx<posx2)
    	      	  	  {
    	      	  	  	for(int i=lx;i<posx2-1;i++)
    	      	  	  	   {
    	      	  	  	   	D();
    	      	  	  	   }
    	      	  	  }
    	      	  	else//lx>=posx2 
    	      	  	  {
    	      	  	  	for(int i=lx;i>posx2-1;i--)
    	      	  	  	   {
    	      	  	  	   	A();
    	      	  	  	   }
    	      	  	  }
    	      	  	W();
    	      	  	D();
    	      	  	posx2--;
    	      	  	while(posx2>x)
    	      	  	     {
    	      	  	     	S();
    	      	  	     	A();
    	      	  	     	A();
    	      	  	     	W();
    	      	  	     	D();
    	      	  	     	posx2--;
    	      	  	     }
    	      	  }
    	      }
    	}
    }
  else//posy2==M-1
    {
      if(ly==M-2)
        {
        	if(lx<=posx2)
        	  {
        	  	for(int i=lx;i<posx2;i++)
        	  	   {
        	  	   	D();
        	  	   }       	  	
        	  }
        	else
        	  {
        	  	for(int i=lx;i>posx2;i--)
        	  	   {
        	  	   	A();
        	  	   }
        	  }
        	S();
        	posy2--;
        	if(posx2>x)
        	  {
        	  	A();
        	  	W();
        	  	D();
        	  	posx2--;
        	  	while(posx2>x)
        	  	     {
        	  	     	S();
        	  	     	A();
        	  	     	A();
        	  	     	W();
        	  	     	D();
        	  	     	posx2--;
        	  	     }
        	  }
        }
      else
        {
            if(ly==M-1)
              {
              	if(lx<posx2)
              	  {
              	  	for(int i=lx;i<posx2;i++)
              	  	   {
              	  	   	D();
              	  	   }
              	  	posx2--;
              	  	while(posx2>x)
              	  	     {
              	  	     	W();
              	  	     	A();
              	  	     	A();
              	  	     	S();
              	  	     	D();
              	  	     	posx2--;
              	  	     }
              	  	W();
              	  	A();
              	  	S();
              	  	posy2--;
              	  }
              	else//lx>posx2,ly==M-1,posy2==M-1 
              	  {
              	  	for(int i=lx;i>posx2+1;i--)
              	  	   {
              	  	   	A();
              	  	   }
              	  	W();
              	  	A();
              	  	S();
              	  	posy2--;
              	  	if(posx2>x)
              	  	  {
              	  	  	A();
              	  	  	W();
              	  	  	D();
              	  	  	posx2--;
              	  	  	while(posx2>x)
              	  	  	     {
              	  	  	     	S();
              	  	  	     	A();
              	  	  	     	A();
              	  	  	     	W();
              	  	  	     	D();
              	  	  	     	posx2--;
              	  	  	     }
              	  	  }
              	  }
              }
        }
    }
    for(int i=M-2;i<M;i++)
	   {
	   	for(int j=0;j<N;j++)
	   	   {
	   	   	if(now[i][j]==begin[y][x])
	   	   	  {
	   	   	  	posy1=i;
	   	   	  	posx1=j;
	   	   	  	break;
	   	   	  }
	   	   }
	   }
	if(posx1==x && posy1==M-1)
	  {
	  	if(ly==M-2)
	  	  {
	  	  	S();
	  	  }
	  	for(int i=lx;i>x+1;i--)
	  	   {
	  	   	A();
	  	   }
	  	A();
	  	posx1++;
	  	W();
	  	D();
	  	D();
	  	S();
	  	A();
	  	posx1++;
	  	A();
	  	W();
	  	D();
	  	S();
	  	A();
	  	W();
	  	D();
	  }
	else
	  {
	  	if(posy1==M-1 && posx1==x+1 && ly==M-1 && lx==x)
	  	  {
	  	  	W();
	  		D();
	  		D();
	  		S();
	  		A();
	  		posx1++;
	  		A();
	  		W();
	  		D();
	  		S();
	  		A();
	  		W();
	  		D();
	  	  }
	  }
	if(posy1==M-2)
	  {
	  	if(posx1!=x+1)
	  	  {
	  	  	if(ly==M-2)
	  	  	  {
	  	  	  	if(lx<posx1)
	  	  	  	  {
	  	  	  	  	for(int i=lx;i<posx1;i++)
	  	  	  	  	   {
	  	  	  	  	   	D();
	  	  	  	  	   }
	  	  	  	  	posx1--;
	  	  	  	  	while(posx1>x+1)
	  	  	  	  	     {
	  	  	  	  	     	S();
	  	  	  	  	     	A();
	  	  	  	  	     	A();
	  	  	  	  	     	W();
	  	  	  	  	     	D();
	  	  	  	  	     	posx1--;
	  	  	  	  	     }
	  	  	  	  }
	  	  	   else//lx>posx1
	  	  	     {
	  	  	     	for(int i=lx;i>posx1+1;i--)
	  	  	     	   {
	  	  	     	   	A();
	  	  	     	   }
	  	  	     	while(posx1>x+1)
	  	  	  	  	     {
	  	  	  	  	     	S();
	  	  	  	  	     	A();
	  	  	  	  	     	A();
	  	  	  	  	     	W();
	  	  	  	  	     	D();
	  	  	  	  	     	posx1--;
	  	  	  	  	     }
	  	  	     }
	  	  	  }
	  	  	else//ly==M-1
	  	  	  {
	  	  	  	if(ly==M-1)
	  	  	  	  {
	  	  	  	  	if(lx<posx1)
	  	  	  	  	  {
	  	  	  	  	  	for(int i=lx;i<posx1-1;i++)
	  	  	  	  	  	   {
	  	  	  	  	  	   	D();
	  	  	  	  	  	   }
	  	  	  	  	  }
	  	  	  	  	else//lx>=posx1
	  	  	  	  	  {
	  	  	  	  	  	for(int i=lx;i>posx1-1;i--)
	  	  	  	  	  	   {
	  	  	  	  	  	   	A();
	  	  	  	  	  	   }
	  	  	  	  	  }
	  	  	  	  	W();
	  	  	  	  	D();
	  	  	  	  	posx1--;
	  	  	  	  	while(posx1>x+1)
	  	  	  	  	     {
	  	  	  	  	     	S();
	  	  	  	  	     	A();
	  	  	  	  	     	A();
	  	  	  	  	     	W();
	  	  	  	  	     	D();
	  	  	  	  	     	posx1--;
	  	  	  	  	     }
	  	  	  	  }
	  	  	  }
	  	  }
	  }
	else//posy1==M-1
	  {
	  	if(posy1==M-1)
	  	  {
	  	  	if(ly==M-2)
	  	  	  {
	  	  	  	if(lx<=posx1)
	  	  	  	  {
	  	  	  	  	for(int i=lx;i<posx1;i++)
	  	  	  	  	   {
	  	  	  	  	   	D();
	  	  	  	  	   }
	  	  	  	  }
	  	  	  	else
	  	  	  	  {
	  	  	  	  	for(int i=lx;i>posx1;i--)
	  	  	  	  	   {
	  	  	  	  	   	A();
	  	  	  	  	   }
	  	  	  	  }
	  	  	  	S();
	  	  	  	posy1--;
	  	  	  	if(posx1>x+1)
	  	  	  	  {
	  	  	  	  	A();
	  	  	  	  	W();
	  	  	  	  	D();
	  	  	  	  	posx1--;
	  	  	  	  	while(posx1>x+1)
	  	  	  	  	     {
	  	  	  	  	     	S();
	  	  	  	  	     	A();
	  	  	  	  	     	A();
	  	  	  	  	     	W();
	  	  	  	  	     	D();
	  	  	  	  	     	posx1--;
	  	  	  	  	     }	  	  	  	  	
	  	  	  	  }
	  	  	  }
	  	    else//ly==M-1
	  	      {
	  	      	if(ly==M-1)
	  	      	  {
	  	      	  	if(lx<posx1)
	  	      	  	  {
	  	      	  	  	for(int i=lx;i<posx1;i++)
	  	      	  	  	   {
	  	      	  	  	   	D();
	  	      	  	  	   }
	  	      	  	  	posx1--;
						while(posx1>x+1)
						     {
						     	W();
						     	A();
						     	A();
						     	S();
						     	D();
						     	posx1--;
						     }
						W();
						A();
						S();
						posy1--;   
	  	      	  	  }
	  	      	  	else//lx>posx1
	  	      	  	  {
	  	      	  	  	for(int i=lx;i>posx1+1;i--)
	  	      	  	  	   {
	  	      	  	  	   	A();
	  	      	  	  	   }
	  	      	  	  	while(posx1>x+1)
	  	      	  	  	     {
	  	      	  	  	     	W();
						     	A();
						     	A();
						     	S();
						     	D();
						     	posx1--;
	  	      	  	  	     }
	  	      	  	  	W();
	  	      	  	  	A();
	  	      	  	  	S();
	  	      	  	  	posy1--;
	  	      	  	  }
	  	      	  }
	  	      }
		  }
	  }
	if(ly==M-2)
	  {
	  	S();
	  }
	for(int i=lx;i>x;i--)
	   {
	   	A();
	   }
	W();
	posy2++;
	D();
	posx1--;
	return;
}
