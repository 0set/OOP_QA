void autorecover(int x,int y)
{
	int posx=0,posy=0;
	for(int i=0;i<M;i++)
	   {
	   	for(int j=0;j<N;j++)
	   	   {
	   	   	if(now[i][j]==begin[y][x])
	   	   	  {
	   	   	  	posx=j;
				posy=i;
				break;
	   	   	  }
	   	   }
	   }
	   
	if(posx==x && posy==y)
	  {
	  	return;
	  }
	else  
	{
	if(posy==y)//posy==y
	  {
	  	if(ly==y)
	  	{
	  		if(lx>posx)
	  	      {
	  	  	    for(int i=lx;i>posx+1;i--)
	  	  	       {
	  	  	   		A();
	  	  	   	   }
	  	  	  }
	  		else
	  	  	 {
	  	  		for(int i=lx;i<posx;i++)
	  	  	   	   {
	  	  	   		D();
	  	  	       }
	  	  	    posx--;
	  	     }
	  		while(posx>x)
	  	        {
	  	     	    S();
	  	     		A();
	  	     		A();
	  	     		W();
	  	     		D();
	  	     		posx--;
	  	        }
	  	    return;
	  	}
	    else
	  	{
	  		if(ly>y)
	  		{
	  		 if(lx>posx)
	  		  {
	  		  	for(int i=lx;i>posx+1;i--)
	  		  	   {
	  		  	   	A();
	  		  	   }
	  		  	for(int i=ly;i>y;i--)
	  		  	   {
	  		  	   	W();
	  		  	   }
	  		  	while(posx>x)
	  		  	    {
	  		  	    	S();
	  	     			A();
	  	     			A();
	  	     			W();
	  	     			D();
	  	     			posx--;
	  		  	    }
	  		  	return;
	  		  }
	  		 else
	  		  {
	  		  	if(lx<posx)
	  		  	{
	  		  	for(int i=lx;i<posx-1;i++)
	  		  	   {
	  		  	   	D();
	  		  	   }
	  		  	for(int i=ly;i>y;i--)
	  		  	   {
	  		  	   	W();
	  		  	   }
	  		  	D();
	  		  	posx--;
	  		  	while(posx>x)
	  		  	    {
	  		  	    	S();
	  	     			A();
	  	     			A();
	  	     			W();
	  	     			D();
	  	     			posx--;
	  		  	    }
	  		  	return;
	  		    }
	  		    else//lx==posx
	  		    {
	  		      A();
	  		      for(int i=ly;i>y;i--)
	  		  	   {
	  		  	   	W();
	  		  	   }
	  		  	  D();
	  		  	  posx--;
	  		  	  while(posx>x)
	  		  	    {
	  		  	    	S();
	  	     			A();
	  	     			A();
	  	     			W();
	  	     			D();
	  	     			posx--;
	  		  	    }
	  		  	  return;
	  		    }
	  		  }
	        }
	  	} 	
	  }//posy==y
	else//posy!=y
	  {
	  	if(posy>y)
	  	{
	  	 if(posx==x)
	  	  {
	  	  	if(ly<posy)
	  	  	  {
	  	  	  	for(int i=ly;i<posy-1;i++)
	  	  	  	   {
	  	  	  	   	S();
	  	  	  	   }
	  	  	  }
	  	  	else
	  	  	  {
	  	  	  	if(ly==posy)
	  	  	  	  {
	  	  	  	  	if(ly==M-1)
	  	  	  	  	{
	  	  	  	  		W();
	  	  	  	  	}
					else
					{
						S();
					}					   
	  	  	  	  }
	  	  	  	else
	  	  	  	  {
	  	  	  	  	for(int i=ly;i>posy+1;i--)
	  	  	  	  	   {
	  	  	  	  	   	W();
	  	  	  	  	   }
	  	  	  	  }	  	  	  	
	  	  	  }
	  	  	if(lx>posx)
	  	  	  	  {
	  	  	  	  	for(int i=lx;i>posx;i--)
	  	  	  	  	   {
	  	  	  	  	   	A();
	  	  	  	  	   }
	  	  	  	  }
	  	  	  	else
	  	  	  	  {
	  	  	  	  	for(int i=lx;i<posx;i++)
	  	  	  	  	   {
	  	  	  	  	   	D();
	  	  	  	  	   }
	  	  	  	  }
	  	  	if(ly<posy)
	  	  	  {
	  	  	  	S();
	  	  	  	posy--;
	  	  	  }
	  	  	if(posx<N-1)
	  	  	{
	  	  	 while(posy>y)
	  	  	  	 {
	  	  	  	    D();
	  	  	  	    W();
	  	  	  	    W();
	  	  	  	    A();
	  	  	  	    S();
	  	  	  	    posy--;
	  	  	  	 }	 
	  	    }
	  	    else
	  	    {
	  	     while(posy>y)
	  	  	  	 {
	  	  	  	    A();
	  	  	  	    W();
	  	  	  	    W();
	  	  	  	    D();
	  	  	  	    S();
	  	  	  	    posy--;
	  	  	  	 }
	  	    }
			return; 	  	
	  	  }
	  	else//posx!=x,posy!=y
	  	  {
	  	  	if(ly!=posy) 
	  	  	  {
	  	  	  	if(ly<posy)
	  	  	  	  {
	  	  	  	   for(int i=ly;i<posy-1;i++)
	  	  	  	      {
	  	  	  	     	S();
	  	  	  	      }
	  	  	      }
	  	  	    else
	  	  	      {
	  	  	      	for(int i=ly;i>posy+1;i--)
	  	  	      	   {
	  	  	      	   	W();
	  	  	      	   }
	  	  	      }
	  	  	  }
	  	  	else
	  	  	  {
	  	  	  	if(posy==M-1)
	  	  	  	  {
	  	  	  	  	W();
	  	  	  	  }
	  	  	  	else
	  	  	  	  {
	  	  	  	  	S();
	  	  	  	  }
	  	  	  }
	  	  	if(lx<=posx)
	  	  	  {
	  	  	  	for(int i=lx;i<posx;i++)
	  	  	  	   {
	  	  	  	   	D();
	  	  	  	   }
	  	  	  }
	  	  	else
	  	  	  {
	  	  	  	for(int i=lx;i>posx;i--)
	  	  	  	   {
	  	  	  	   	A();
	  	  	  	   }
	  	  	  }
	  	  	if(posx<x)
	  	  	  {
	  	  	  	if(ly<posy)
	  	  	  	  {
	  	  	  	  	D();
	  	  	  	  	S();
	  	  	  	  	A();
	  	  	  	  	posx++;
	  	  	  	  	while(posx<x)
	  	  	  	  	     {
						   W();
						   D();
						   D();
						   S();
						   A();
						   posx++;	  	  	  	  	   	
	  	  	  	  	     }
	  	  	  	  	W();
	  	  	  	  	D();
	  	  	  	  	S();
	  	  	  	  	posy--;
	  	  	  	  	while(posy>y)
	  	  	  	  	     {
	  	  	  	  	     	D();
	  	  	  	  	     	W();
	  	  	  	  	     	W();
	  	  	  	  	     	A();
	  	  	  	  	     	S();
	  	  	  	  	     	posy--;
	  	  	  	  	     }
	  	  	  	  	return;
	  	  	  	  }
	  	  	  	else//posx<x,ly>posy
	  	  	  	  {
	  	  	  	  	D();
	  	  	  	  	W();
	  	  	  	  	A();
	  	  	  	  	posx++;
	  	  	  	  	while(posx<x)
	  	  	  	  	     {
	  	  	  	  	       S();
	  	  	  	  	       D();
	  	  	  	  	       D();
	  	  	  	  	       W();
	  	  	  	  	       A();
	  	  	  	  	       posx++;
	  	  	  	  	     }
	  	  	  	  	S();
	  	  	  	  	D();
	  	  	  	  	while(posy>y)
	  	  	  	  	     {
	  	  	  	  	     	D();
	  	  	  	  	     	W();
	  	  	  	  	     	W();
	  	  	  	  	     	A();
	  	  	  	  	     	S();
	  	  	  	  	     	posy--;
	  	  	  	  	     }
	  	  	  	  	return;
	  	  	  	  }
	  	  	  }
	  	  	else//posx>x
	  	  	  {
	  	  	  	if(ly<posy)
	  	  	  	  {
	  	  	  	  	A();
	  	  	  	  	S();
	  	  	  	  	D();
	  	  	  	  	posx--;
	  	  	  	  	while(posx>x)
	  	  	  	  	     {
						   W();
						   A();
						   A();
						   S();
						   D();
						   posx--;	  	  	  	  	   	
	  	  	  	  	     }
	  	  	  	  	W();
	  	  	  	  	A();
	  	  	  	  	S();
	  	  	  	  	posy--;
	  	  	  	  	while(posy>y)
	  	  	  	  	     {
	  	  	  	  	       D();
	  	  	  	  	       W();
	  	  	  	  	       W();
	  	  	  	  	       A();
	  	  	  	  	       S();
	  	  	  	  	       posy--;
	  	  	  	  	     }
	  	  	  	  	return;
	  	  	  	  }
	  	  	  	else//posx>x,ly>posy
	  	  	  	  {
	  	  	  	  	A();
	  	  	  	  	W();
	  	  	  	  	D();
	  	  	  	  	posx--;
	  	  	  	  	while(posx>x)
	  	  	  	  	     {
	  	  	  	  	       S();
	  	  	  	  	       A();
	  	  	  	  	       A();
	  	  	  	  	       W();
	  	  	  	  	       D();
	  	  	  	  	       posx--;
	  	  	  	  	     }
	  	  	  	  	S();
	  	  	  	  	A();
	  	  	  	  	while(posy>y)
	  	  	  	  	     {
	  	  	  	  	     	D();
	  	  	  	  	     	W();
	  	  	  	  	     	W();
	  	  	  	  	     	A();
	  	  	  	  	     	S();
	  	  	  	  	     	posy--;
	  	  	  	  	     }
	  	  	  	  	return;
	  	  	  	  }
	  	  	  }
	  	  }
	  }
     }
    }
}
